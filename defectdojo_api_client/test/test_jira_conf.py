# coding: utf-8

"""
    Defect Dojo API

    To use the API you need be authorized.  # noqa: E501

    The version of the OpenAPI document: v2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import defectdojo_api_client
from defectdojo_api_client.models.jira_conf import JIRAConf  # noqa: E501
from defectdojo_api_client.rest import ApiException

class TestJIRAConf(unittest.TestCase):
    """JIRAConf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JIRAConf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = defectdojo_api_client.models.jira_conf.JIRAConf()  # noqa: E501
        if include_optional :
            return JIRAConf(
                id = 56, 
                configuration_name = '0', 
                url = '0', 
                username = '0', 
                password = '0', 
                default_issue_type = 'Task', 
                epic_name_id = -2147483648, 
                open_status_key = -2147483648, 
                close_status_key = -2147483648, 
                info_mapping_severity = '0', 
                low_mapping_severity = '0', 
                medium_mapping_severity = '0', 
                high_mapping_severity = '0', 
                critical_mapping_severity = '0', 
                finding_text = '0', 
                accepted_mapping_resolution = '0', 
                false_positive_mapping_resolution = '0'
            )
        else :
            return JIRAConf(
                url = '0',
                username = '0',
                password = '0',
                epic_name_id = -2147483648,
                open_status_key = -2147483648,
                close_status_key = -2147483648,
                info_mapping_severity = '0',
                low_mapping_severity = '0',
                medium_mapping_severity = '0',
                high_mapping_severity = '0',
                critical_mapping_severity = '0',
        )

    def testJIRAConf(self):
        """Test JIRAConf"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
